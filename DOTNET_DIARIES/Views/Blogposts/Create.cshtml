@model DOTNET_DIARIES.Models.Blogpost

@{
    ViewData["Title"] = "Create Blogpost";
    var tags = ViewBag.Tags as List<DOTNET_DIARIES.Models.Tag>;
}

<h1>Create Blogpost</h1>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ShortDescription"></label>
        <input asp-for="ShortDescription" class="form-control" />
        <span asp-validation-for="ShortDescription" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="UrlHandle"></label>
        <input asp-for="UrlHandle" class="form-control" />
        <span asp-validation-for="UrlHandle" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="form-label">Image Upload</label>
        <input id="imageUrlUpload" class="form-control" type="file" />
    </div>
    <div class="form-group">
        <label asp-for="ImageUrl"></label>
        <input asp-for="ImageUrl" class="form-control" />
        <span asp-validation-for="ImageUrl" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Content"></label>
        <textarea id="content" asp-for="Content" class="form-control"></textarea>
        <span asp-validation-for="Content" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Tags</label>
        <div>
            @foreach (var tag in tags)
            {
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" name="selectedTags" value="@tag.Id" id="tag_@tag.Id" />
                    <label class="form-check-label" for="tag_@tag.Id">@tag.Name</label>
                </div>
            }
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <script>
        @*var editor = new FroalaEditor('#content');*@

    
    const imageUrlUpload = document.getElementById('imageUrlUpload');
    const imageUrl = document.getElementById('ImageUrl');

    async function uploadImage(e) {
        console.log(e.target.files[0]);

        let data = new FormData();
        data.append('file', e.target.files[0]);

    await fetch('/api/images', {
            method: 'POST',
            headers: {
                'Accept': '*/*'
            },
            body: data
        }).then(Response => Response.json())
            .then(result => {
                imageUrl.value = result.link; // Assuming the API returns the image URL
                console.log('Image uploaded successfully:', result);
            });


        @*try {
            const response = await fetch('/Blogposts/UploadImage', {
                method: 'POST',
                body: data
            });

            if (!response.ok) {
                throw new Error('Image upload failed');
            }

            const result = await response.json();
            console.log(result);
            document.getElementById('ImageUrl').value = result.imageUrl; // Assuming the API returns the image URL
        } catch (error) {
            console.error('Error uploading image:', error);
        }*@
    }

    imageUrlUpload.addEventListener('change', uploadImage);
    
    </script>
}